# Application configuration
spring.application.name=panda-food-orderservices-management
server.port=5001

# Database connection to AWS RDS
spring.datasource.url=jdbc:mysql://pandafooddb.czo600i424uv.eu-central-1.rds.amazonaws.com:3306/PFODB
spring.datasource.username=orderservice
spring.datasource.password=${DB_PASSWORD}  # Password will be read from Docker secret at runtime

# Hibernate and JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
spring.jpa.show-sql=true

# Kafka topic used for vendor responses
topic.name=vendor-validated-orders

# Kafka broker host accessed inside Docker network
#spring.kafka.bootstrap-servers=${KAFKA_HOST}:9092

# Consumer configuration
spring.kafka.consumer.group-id=order-management-group
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka deserializers for Avro message decoding
#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer

# Schema registry for Avro schemas
spring.kafka.properties.schema.registry.url=http://${SCHEMA_REGISTRY_HOST}:8081
spring.kafka.properties.specific.avro.reader=true

# Optional Kafka monitoring interceptor and log suppression
#spring.kafka.consumer.properties.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
#logging.level.io.confluent.monitoring.clients.interceptor=ERROR
#logging.level.org.springframework.kafka=ERROR
#logging.level.org.springframework.kafka.support.serializer=ERROR
#logging.level.io.confluent.kafka.serializers=ERROR
#logging.level.org.apache.kafka.clients.consumer=ERROR
#logging.level.org.springframework.kafka.listener=ERROR
#logging.level.org.springframework.kafka.config=ERROR
#logging.level.org.springframework.boot.autoconfigure.kafka=ERROR
#spring.kafka.listener.log-container-config=false
#logging.level.org.springframework.kafka.listener.ConcurrentMessageListenerContainer=ERROR
#logging.level.org.apache.kafka.clients.NetworkClient=ERROR

# Retry configuration for Kafka connectivity
#spring.kafka.consumer.properties.retry.backoff.ms=5000
#spring.kafka.consumer.properties.reconnect.backoff.max.ms=15000

# Suppress log4j Kafka logs
#log4j.logger.org.apache.kafka=ERROR
#log4j.logger.kafka=ERROR
spring.kafka.listener.auto-startup=false
spring.kafka.consumer.enabled=false


# Vendor API endpoint used to push orders
vendor.base.url=http://${VENDOR_BASE_URL}/vendors

# Expose health and info endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
eureka.client.service-url.defaultZone=http://hungry-panda-eureka-server:8761/eureka